class Game {
  final GameTeam away;
  final GameTeam home;
  final BoxScore boxScore;

  Game(Team away, Team home) :
    away = GameTeam(away),
    home = GameTeam(home),
    boxScore = BoxScore();
}

class GameTeam {
  final Team team;
  Score score;

  GameTeam(this.team);
}

class BoxScore {
  int atBat;
  int balls = 0;
  int strikes = 0;
  int outs = 0;

  void ball() {
    ball++;

    if (ball == 4) {
      balls = 0;
      strikes = 0;
    }
  }

  void strike() {
    strikes++;

    if (strikes == 3) {
      out();
    }
  }

  void out() {
    outs++;
    balls = 0;
    strikes = 0;

    if (outs == 3) {
      outs = 0;
    }
  }
}

class Score {
  int runs;
  int hits;
  int errors;
  int pitches;
  List<int> innings;
}

abstract class Team {
  String name;
  String city;
  List<Players> roster;
}

class Player {
  String firstName;
  String lastName;
  int number;
  Position position;
  bool isActive;
}

class BatterType {
  left,
  right,
  switch,
}

class Pitch {
  PitchType pitchType;
  num velocity;
  Point target;
  Player pitcher;
  Player batter;
  BatterType batterType;
  PitchResult pitchResult;
  Base baseReached;
}


enum PitchResult {
  strike,
  ball,
  foul,
  hit,
  hitByPitch,
}


class Inning {
  int inning;
  InningType inningType;
}

enum InningType {
  top,
  bottom,
}

